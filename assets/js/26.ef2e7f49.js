(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{504:function(n,e,t){"use strict";t.r(e);var s=t(4),a=Object(s.a)({},(function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[t("h2",{attrs:{id:"题目来源："}},[t("a",{staticClass:"header-anchor",attrs:{href:"#题目来源："}},[n._v("#")]),n._v(" 题目来源：")]),n._v(" "),t("p",[n._v("("),t("a",{attrs:{href:"https://leetcode-cn.com/problems/reverse-linked-list/",target:"_blank",rel:"noopener noreferrer"}},[n._v("题目来源"),t("OutboundLink")],1),n._v(' " 206.【简单】反转链表")')]),n._v(" "),t("h2",{attrs:{id:"题目"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#题目"}},[n._v("#")]),n._v(" 题目")]),n._v(" "),t("p",[n._v("反转一个单链表。")]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v("示例:\n\n输入: 1->2->3->4->5->NULL\n输出: 5->4->3->2->1->NULL\n")])])]),t("p",[n._v("进阶:\n你可以迭代或递归地反转链表。你能否用两种方法解决这道题？")]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v("\n## 分析\n\n这个关键就是查找\n\n\n## 题解\n\n方法一\n```java\n\n// @lc code=start\n/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode() {}\n *     ListNode(int val) { this.val = val; }\n *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }\n * }\n */\nclass Solution {\n    public ListNode removeNthFromEnd(ListNode head, int n) {\n        if (n <= 0 || head == null) {\n            return head;\n        }\n\n\n        ListNode cur = head;\n        int size = 0;\n        while (cur != null) {\n            size++;\n            cur = cur.next;\n        }\n        int num = size - n;\n\n        ListNode pre = new ListNode(-1);\n        pre.next = head;\n        cur = pre;\n\n        while(num > 0) {\n            cur = cur.next;\n            -- num;\n        }\n\n        cur.next = cur.next.next;\n        return pre.next;\n    }\n}\n")])])]),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v("输入\n[1,2,3,4,5] \n1\n输出\n[1,2,3,4]\n\n\n\n")])])])])}),[],!1,null,null,null);e.default=a.exports}}]);