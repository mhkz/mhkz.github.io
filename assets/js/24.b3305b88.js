(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{502:function(e,n,t){"use strict";t.r(n);var r=t(4),s=Object(r.a)({},(function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h2",{attrs:{id:"题目来源："}},[t("a",{staticClass:"header-anchor",attrs:{href:"#题目来源："}},[e._v("#")]),e._v(" 题目来源：")]),e._v(" "),t("p",[e._v("("),t("a",{attrs:{href:"https://leetcode-cn.com/problems/remove-nth-node-from-end-of-list/comments/",target:"_blank",rel:"noopener noreferrer"}},[e._v("题目来源"),t("OutboundLink")],1),e._v(' " 19.【中等】删除链表的倒数第N个节点")')]),e._v(" "),t("h2",{attrs:{id:"题目"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#题目"}},[e._v("#")]),e._v(" 题目")]),e._v(" "),t("p",[e._v("给定一个链表，删除链表的倒数第 n 个节点，并且返回链表的头结点。")]),e._v(" "),t("p",[e._v("示例：")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("给定一个链表: 1->2->3->4->5, 和 n = 2.\n\n当删除了倒数第二个节点后，链表变为 1->2->3->5.\n")])])]),t("p",[e._v("说明：")]),e._v(" "),t("p",[e._v("给定的 n 保证是有效的。")]),e._v(" "),t("p",[e._v("进阶：")]),e._v(" "),t("p",[e._v("你能尝试使用一趟扫描实现吗？")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("\n## 分析\n这里设置三个变量，`current`, `reverseHead`, `next`\n其中 `current` 指当前循环到的节点，`reverseHead` 是新的链表，next指向下一个节点\n第一次循环时\n先把next节点找出来，为\nnext = current.next\nreverseHead为空节点的节点头部，然后把current这个节点指向 `current`\n这个时候，\ncurrent.next = reverseHead.next;\n完成了第一个节点的指向，指完之后，要把reverseHead移到当前节点，\n即 reverseHead.next = current\n然后把current指向下一个节点\ncurrent = next;\n然后一次循环即可\n## 题解\n\n方法一\n```java\n/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode(int x) { val = x; }\n * }\n */\nclass Solution {\n    public ListNode reverseList(ListNode head) {\n        if (head == null) return head;\n        ListNode current = head;\n        ListNode next = current.next;\n        ListNode reverseHead = new ListNode(0);\n\n        while (current != null) {\n            next = current.next;\n            current.next = reverseHead.next;\n            reverseHead.next = current;\n            current = next;\n        }\n        return reverseHead.next;\n    }\n}\n")])])]),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("输入\n[1,2,3,4,5] \n\n输出\n[5,4,3,2,1]\n")])])])])}),[],!1,null,null,null);n.default=s.exports}}]);